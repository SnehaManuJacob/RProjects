{
  "hash": "ae4747d2e048e7d32223d29927b09e7b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 1\"\nauthor: \"Sneha Jacob\"\ndate: \"2024-09-26\"\ncategories: [intro, babyname-analysis, line-graph]\n---\n\n\n\n\n## Introduction\n\nI'm a designer in training and like most people in the creatives, my interests cover a broad spectrum ranging from 3D Modelling and Lettering to Website Designs. I'm now working to add data visualisation and into my skill set, **I hope I don't totally suck at it**!\n\n## My First Piece of R-code\n\nI'm doing this!!!!!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary (tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary (ggformula)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n\tlearnr::run_tutorial(\"introduction\", package = \"ggformula\")\n\tlearnr::run_tutorial(\"refining\", package = \"ggformula\")\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary (babynames)\n\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n:::\n\n\n\n\n#### Getting a list of all baby names in the USA from the year 1880\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   <dbl> <chr> <chr>     <int>  <dbl>\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n```\n\n\n:::\n:::\n\n\n\n\n```         \n```\n\n#### Filtering the presence of my name i.e. Sneha and creating a line graph with this data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% filter (name==\"Sneha\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 43 × 5\n    year sex   name      n       prop\n   <dbl> <chr> <chr> <int>      <dbl>\n 1  1975 F     Sneha     9 0.00000577\n 2  1976 F     Sneha     7 0.00000445\n 3  1977 F     Sneha     9 0.00000547\n 4  1978 F     Sneha     9 0.00000548\n 5  1979 F     Sneha     6 0.00000348\n 6  1980 F     Sneha     7 0.00000393\n 7  1981 F     Sneha     6 0.00000336\n 8  1982 F     Sneha     8 0.00000441\n 9  1983 F     Sneha     9 0.00000503\n10  1984 F     Sneha    14 0.00000777\n# ℹ 33 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% filter(name==\"Sneha\") %>% gf_line(n~year)\n```\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Filtering the presence of the name \"Trisha\" and creating a line graph with this data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% filter (name==\"Trisha\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 84 × 5\n    year sex   name       n       prop\n   <dbl> <chr> <chr>  <int>      <dbl>\n 1  1934 F     Trisha     5 0.00000462\n 2  1943 F     Trisha     5 0.00000348\n 3  1944 F     Trisha    33 0.0000242 \n 4  1945 F     Trisha    46 0.0000342 \n 5  1946 F     Trisha    56 0.0000347 \n 6  1947 F     Trisha    32 0.0000176 \n 7  1948 F     Trisha    29 0.0000166 \n 8  1949 F     Trisha    28 0.0000160 \n 9  1950 F     Trisha    36 0.0000205 \n10  1951 F     Trisha    50 0.0000271 \n# ℹ 74 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% filter(name==\"Trisha\") %>% gf_line(n~year)\n```\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Filtering the presence of the name \"Sarah\" and creating a line graph with this data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% filter (name==\"Sarah\" | name==\"Sara\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 487 × 5\n    year sex   name      n      prop\n   <dbl> <chr> <chr> <int>     <dbl>\n 1  1880 F     Sarah  1288 0.0132   \n 2  1880 F     Sara    165 0.00169  \n 3  1881 F     Sarah  1226 0.0124   \n 4  1881 F     Sara    147 0.00149  \n 5  1882 F     Sarah  1410 0.0122   \n 6  1882 F     Sara    180 0.00156  \n 7  1883 F     Sarah  1359 0.0113   \n 8  1883 F     Sara    183 0.00152  \n 9  1883 M     Sarah     7 0.0000622\n10  1884 F     Sarah  1518 0.0110   \n# ℹ 477 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% filter(name==\"Sarah\" | name==\"Sara\") %>% gf_line(n~year)\n```\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Glimpse:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,924,665\nColumns: 5\n$ year <dbl> 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", …\n$ name <chr> \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    <int> 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop <dbl> 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames_modified <- babynames %>%\n  dplyr::mutate(\n    sex = as_factor(sex),\n  )\nglimpse(babynames_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,924,665\nColumns: 5\n$ year <dbl> 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  <fct> F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F,…\n$ name <chr> \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    <int> 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop <dbl> 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames_modified %>% mosaic::inspect()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n  name     class levels       n missing\n1  sex    factor      2 1924665       0\n2 name character  97310 1924665       0\n                                   distribution\n1 F (59.1%), M (40.9%)                         \n2 Francis (0%), James (0%) ...                 \n\nquantitative variables:  \n  name   class      min        Q1    median        Q3          max         mean\n1 year numeric 1.88e+03 1.951e+03 1.985e+03 2.003e+03 2.017000e+03 1.974851e+03\n2    n integer 5.00e+00 7.000e+00 1.200e+01 3.200e+01 9.968600e+04 1.808733e+02\n3 prop numeric 2.26e-06 3.870e-06 7.300e-06 2.288e-05 8.154561e-02 1.362963e-04\n            sd       n missing\n1 3.402948e+01 1924665       0\n2 1.533337e+03 1924665       0\n3 1.151693e-03 1924665       0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames_modified %>% skimr::skim()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |1924665    |\n|Number of columns        |5          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |1          |\n|factor                   |1          |\n|numeric                  |3          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name          |         0|             1|   2|  15|     0|    97310|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts            |\n|:-------------|---------:|-------------:|:-------|--------:|:---------------------|\n|sex           |         0|             1|FALSE   |        2|F: 1138293, M: 786372 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|      sd|   p0|  p25|  p50|  p75|     p100|hist  |\n|:-------------|---------:|-------------:|-------:|-------:|----:|----:|----:|----:|--------:|:-----|\n|year          |         0|             1| 1974.85|   34.03| 1880| 1951| 1985| 2003|  2017.00|▁▂▃▅▇ |\n|n             |         0|             1|  180.87| 1533.34|    5|    7|   12|   32| 99686.00|▇▁▁▁▁ |\n|prop          |         0|             1|    0.00|    0.00|    0|    0|    0|    0|     0.08|▇▁▁▁▁ |\n\n\n:::\n:::\n",
    "supporting": [
      "Index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}