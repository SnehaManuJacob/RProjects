{
  "hash": "71b4540a64b2441a2d77d4c5318236e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 6\"\nauthor: \"Sneha Manu Jacob\"\ndate: \"2024-10-17\"\ncategories: \n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Data Processing in R\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Our workhorse for stats, sampling\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr) # Good to Examine data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula) # Formula interface for graphs\n\n# load the NHANES data library\nlibrary(NHANES)\nlibrary(infer)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"NHANES\")\nglimpse(NHANES)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 76\n$ ID               <int> 51624, 51624, 51624, 51625, 51630, 51638, 51646, 5164…\n$ SurveyYr         <fct> 2009_10, 2009_10, 2009_10, 2009_10, 2009_10, 2009_10,…\n$ Gender           <fct> male, male, male, male, female, male, male, female, f…\n$ Age              <int> 34, 34, 34, 4, 49, 9, 8, 45, 45, 45, 66, 58, 54, 10, …\n$ AgeDecade        <fct>  30-39,  30-39,  30-39,  0-9,  40-49,  0-9,  0-9,  40…\n$ AgeMonths        <int> 409, 409, 409, 49, 596, 115, 101, 541, 541, 541, 795,…\n$ Race1            <fct> White, White, White, Other, White, White, White, Whit…\n$ Race3            <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Education        <fct> High School, High School, High School, NA, Some Colle…\n$ MaritalStatus    <fct> Married, Married, Married, NA, LivePartner, NA, NA, M…\n$ HHIncome         <fct> 25000-34999, 25000-34999, 25000-34999, 20000-24999, 3…\n$ HHIncomeMid      <int> 30000, 30000, 30000, 22500, 40000, 87500, 60000, 8750…\n$ Poverty          <dbl> 1.36, 1.36, 1.36, 1.07, 1.91, 1.84, 2.33, 5.00, 5.00,…\n$ HomeRooms        <int> 6, 6, 6, 9, 5, 6, 7, 6, 6, 6, 5, 10, 6, 10, 10, 4, 3,…\n$ HomeOwn          <fct> Own, Own, Own, Own, Rent, Rent, Own, Own, Own, Own, O…\n$ Work             <fct> NotWorking, NotWorking, NotWorking, NA, NotWorking, N…\n$ Weight           <dbl> 87.4, 87.4, 87.4, 17.0, 86.7, 29.8, 35.2, 75.7, 75.7,…\n$ Length           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ HeadCirc         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Height           <dbl> 164.7, 164.7, 164.7, 105.4, 168.4, 133.1, 130.6, 166.…\n$ BMI              <dbl> 32.22, 32.22, 32.22, 15.30, 30.57, 16.82, 20.64, 27.2…\n$ BMICatUnder20yrs <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ BMI_WHO          <fct> 30.0_plus, 30.0_plus, 30.0_plus, 12.0_18.5, 30.0_plus…\n$ Pulse            <int> 70, 70, 70, NA, 86, 82, 72, 62, 62, 62, 60, 62, 76, 8…\n$ BPSysAve         <int> 113, 113, 113, NA, 112, 86, 107, 118, 118, 118, 111, …\n$ BPDiaAve         <int> 85, 85, 85, NA, 75, 47, 37, 64, 64, 64, 63, 74, 85, 6…\n$ BPSys1           <int> 114, 114, 114, NA, 118, 84, 114, 106, 106, 106, 124, …\n$ BPDia1           <int> 88, 88, 88, NA, 82, 50, 46, 62, 62, 62, 64, 76, 86, 6…\n$ BPSys2           <int> 114, 114, 114, NA, 108, 84, 108, 118, 118, 118, 108, …\n$ BPDia2           <int> 88, 88, 88, NA, 74, 50, 36, 68, 68, 68, 62, 72, 88, 6…\n$ BPSys3           <int> 112, 112, 112, NA, 116, 88, 106, 118, 118, 118, 114, …\n$ BPDia3           <int> 82, 82, 82, NA, 76, 44, 38, 60, 60, 60, 64, 76, 82, 7…\n$ Testosterone     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ DirectChol       <dbl> 1.29, 1.29, 1.29, NA, 1.16, 1.34, 1.55, 2.12, 2.12, 2…\n$ TotChol          <dbl> 3.49, 3.49, 3.49, NA, 6.70, 4.86, 4.09, 5.82, 5.82, 5…\n$ UrineVol1        <int> 352, 352, 352, NA, 77, 123, 238, 106, 106, 106, 113, …\n$ UrineFlow1       <dbl> NA, NA, NA, NA, 0.094, 1.538, 1.322, 1.116, 1.116, 1.…\n$ UrineVol2        <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ UrineFlow2       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ Diabetes         <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, N…\n$ DiabetesAge      <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ HealthGen        <fct> Good, Good, Good, NA, Good, NA, NA, Vgood, Vgood, Vgo…\n$ DaysPhysHlthBad  <int> 0, 0, 0, NA, 0, NA, NA, 0, 0, 0, 10, 0, 4, NA, NA, 0,…\n$ DaysMentHlthBad  <int> 15, 15, 15, NA, 10, NA, NA, 3, 3, 3, 0, 0, 0, NA, NA,…\n$ LittleInterest   <fct> Most, Most, Most, NA, Several, NA, NA, None, None, No…\n$ Depressed        <fct> Several, Several, Several, NA, Several, NA, NA, None,…\n$ nPregnancies     <int> NA, NA, NA, NA, 2, NA, NA, 1, 1, 1, NA, NA, NA, NA, N…\n$ nBabies          <int> NA, NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Age1stBaby       <int> NA, NA, NA, NA, 27, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ SleepHrsNight    <int> 4, 4, 4, NA, 8, NA, NA, 8, 8, 8, 7, 5, 4, NA, 5, 7, N…\n$ SleepTrouble     <fct> Yes, Yes, Yes, NA, Yes, NA, NA, No, No, No, No, No, Y…\n$ PhysActive       <fct> No, No, No, NA, No, NA, NA, Yes, Yes, Yes, Yes, Yes, …\n$ PhysActiveDays   <int> NA, NA, NA, NA, NA, NA, NA, 5, 5, 5, 7, 5, 1, NA, 2, …\n$ TVHrsDay         <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ CompHrsDay       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ TVHrsDayChild    <int> NA, NA, NA, 4, NA, 5, 1, NA, NA, NA, NA, NA, NA, 4, N…\n$ CompHrsDayChild  <int> NA, NA, NA, 1, NA, 0, 6, NA, NA, NA, NA, NA, NA, 3, N…\n$ Alcohol12PlusYr  <fct> Yes, Yes, Yes, NA, Yes, NA, NA, Yes, Yes, Yes, Yes, Y…\n$ AlcoholDay       <int> NA, NA, NA, NA, 2, NA, NA, 3, 3, 3, 1, 2, 6, NA, NA, …\n$ AlcoholYear      <int> 0, 0, 0, NA, 20, NA, NA, 52, 52, 52, 100, 104, 364, N…\n$ SmokeNow         <fct> No, No, No, NA, Yes, NA, NA, NA, NA, NA, No, NA, NA, …\n$ Smoke100         <fct> Yes, Yes, Yes, NA, Yes, NA, NA, No, No, No, Yes, No, …\n$ Smoke100n        <fct> Smoker, Smoker, Smoker, NA, Smoker, NA, NA, Non-Smoke…\n$ SmokeAge         <int> 18, 18, 18, NA, 38, NA, NA, NA, NA, NA, 13, NA, NA, N…\n$ Marijuana        <fct> Yes, Yes, Yes, NA, Yes, NA, NA, Yes, Yes, Yes, NA, Ye…\n$ AgeFirstMarij    <int> 17, 17, 17, NA, 18, NA, NA, 13, 13, 13, NA, 19, 15, N…\n$ RegularMarij     <fct> No, No, No, NA, No, NA, NA, No, No, No, NA, Yes, Yes,…\n$ AgeRegMarij      <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 20, 15, N…\n$ HardDrugs        <fct> Yes, Yes, Yes, NA, Yes, NA, NA, No, No, No, No, Yes, …\n$ SexEver          <fct> Yes, Yes, Yes, NA, Yes, NA, NA, Yes, Yes, Yes, Yes, Y…\n$ SexAge           <int> 16, 16, 16, NA, 12, NA, NA, 13, 13, 13, 17, 22, 12, N…\n$ SexNumPartnLife  <int> 8, 8, 8, NA, 10, NA, NA, 20, 20, 20, 15, 7, 100, NA, …\n$ SexNumPartYear   <int> 1, 1, 1, NA, 1, NA, NA, 0, 0, 0, NA, 1, 1, NA, NA, 1,…\n$ SameSex          <fct> No, No, No, NA, Yes, NA, NA, Yes, Yes, Yes, No, No, N…\n$ SexOrientation   <fct> Heterosexual, Heterosexual, Heterosexual, NA, Heteros…\n$ PregnantNow      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNHANES_adult <-\n  NHANES %>%\n  distinct(ID, .keep_all = TRUE) %>%\n  filter(Age >= 18) %>%\n  select(Height) %>%\n  drop_na(Height)\nNHANES_adult\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,790 × 1\n   Height\n    <dbl>\n 1   165.\n 2   168.\n 3   167.\n 4   170.\n 5   182.\n 6   169.\n 7   148.\n 8   178.\n 9   181.\n10   170.\n# ℹ 4,780 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npop_mean <- mosaic::mean(~Height, data = NHANES_adult)\n\npop_sd <- mosaic::sd(~Height, data = NHANES_adult)\n\npop_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 168.3497\n```\n\n\n:::\n\n```{.r .cell-code}\npop_sd \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10.15705\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_50 <- mosaic::sample(NHANES_adult, size = 50) %>%\n  select(Height)\nsample_50\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 1\n   Height\n    <dbl>\n 1   144.\n 2   158.\n 3   176.\n 4   155.\n 5   163 \n 6   167.\n 7   153.\n 8   151.\n 9   167.\n10   156.\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nsample_mean_50 <- mean(~Height, data = sample_50)\nsample_mean_50\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 166.84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_50 %>%\n  gf_histogram(~Height, bins = 10) %>%\n  gf_vline(\n    xintercept = ~sample_mean_50,\n    color = \"purple\"\n  ) %>%\n  gf_vline(\n    xintercept = ~pop_mean,\n    colour = \"black\"\n  ) %>%\n  gf_label(7 ~ (pop_mean + 8),\n    label = \"Population Mean\",\n    color = \"black\"\n  ) %>%\n  gf_label(7 ~ (sample_mean_50 - 8),\n    label = \"Sample Mean\", color = \"purple\"\n  ) %>%\n  gf_labs(\n    title = \"Distribution and Mean of a Single Sample\",\n    subtitle = \"Sample Size = 50\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 50 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 50 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_50_500 <- do(500) * {\n  sample(NHANES_adult, size = 50) %>%\n    select(Height) %>% # drop sampling related column \"orig.id\"\n    summarise(\n      sample_mean = mean(Height),\n      sample_sd = sd(Height),\n      sample_min = min(Height),\n      sample_max = max(Height)\n    )\n}\nsample_50_500\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 500 × 6\n   sample_mean sample_sd sample_min sample_max  .row .index\n         <dbl>     <dbl>      <dbl>      <dbl> <int>  <dbl>\n 1        168.      9.73       151.       193.     1      1\n 2        167.      9.95       149        189.     1      2\n 3        168.      9.86       152.       190.     1      3\n 4        169.      9.85       145        196.     1      4\n 5        167.      9.64       149.       191.     1      5\n 6        170.     10.3        146.       193.     1      6\n 7        167.      9.58       152.       189.     1      7\n 8        168.     10.2        146.       186.     1      8\n 9        169.     10.2        149.       190.     1      9\n10        168.     11.3        146.       191.     1     10\n# ℹ 490 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(sample_50_500)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 500   6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_50_500 %>%\n  gf_point(.index ~ sample_mean,\n    color = \"purple\",\n    title = \"Sample Means are close to the Population Mean\",\n    subtitle = \"Sample Means are Random!\",\n    caption = \"Grey lines represent our 500 samples\"\n  ) %>%\n  gf_segment(\n    .index + .index ~ sample_min + sample_max,\n    color = \"grey\",\n    linewidth = 0.3,\n    alpha = 0.3,\n    ylab = \"Sample Index (1-500)\",\n    xlab = \"Sample Means\"\n  ) %>%\n  gf_vline(\n    xintercept = ~pop_mean,\n    color = \"black\"\n  ) %>%\n  gf_label(-25 ~ pop_mean,\n    label = \"Population Mean\",\n    color = \"black\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 500 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\nIt can be more of less, therefore fore it is fair. i can trust the mean. Therefore a sample mean is a good point to estimate the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_50_500 %>%\n  gf_point(.index ~ sample_sd,\n    color = \"purple\",\n    title = \"Sample SDs are close to the Population Sd\",\n    subtitle = \"Sample SDs are Random!\",\n  ) %>%\n  gf_vline(\n    xintercept = ~pop_sd,\n    color = \"black\"\n  ) %>%\n  gf_label(-25 ~ pop_sd,\n    label = \"Population SD\",\n    color = \"black\"\n  ) %>%\n  gf_refine(lims(x = c(4, 16)))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 500 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_50_500 %>%\n  gf_dhistogram(~sample_mean, bins = 30, xlab = \"Height\") %>%\n  gf_vline(\n    xintercept = pop_mean,\n    color = \"blue\"\n  ) %>%\n  gf_label(0.01 ~ pop_mean,\n    label = \"Population Mean\",\n    color = \"blue\"\n  ) %>%\n  gf_labs(\n    title = \"Sampling Mean Distribution\",\n    subtitle = \"500 means\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 500 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# How does this **distribution of sample-means** compare with the\n# overall distribution of the population?\n#\nsample_50_500 %>%\n  gf_dhistogram(~sample_mean, bins = 30, xlab = \"Height\") %>%\n  gf_vline(\n    xintercept = pop_mean,\n    color = \"blue\"\n  ) %>%\n  gf_label(0.01 ~ pop_mean,\n    label = \"Population Mean\",\n    color = \"blue\"\n  ) %>%\n  ## Add the population histogram\n  gf_histogram(~Height,\n    data = NHANES_adult,\n    alpha = 0.2, fill = \"blue\",\n    bins = 30\n  ) %>%\n  gf_label(0.025 ~ (pop_mean + 20),\n    label = \"Population Distribution\", color = \"blue\"\n  ) %>%\n  gf_labs(title = \"Sampling Mean Distribution\", subtitle = \"Original Population overlay\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 500 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 500 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### **Deriving the Central Limit Theorem (CLT)**\n\nAs sample lenght increases, the density graph becomes narrower.\n\nlet's test this out:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples_08_1000 <- do(1000) * mean(resample(NHANES_adult$Height, size = 08))\n\nsamples_16_1000 <- do(1000) * mean(resample(NHANES_adult$Height, size = 16))\n\nsamples_32_1000 <- do(1000) * mean(resample(NHANES_adult$Height, size = 32))\n\nsamples_64_1000 <- do(1000) * mean(resample(NHANES_adult$Height, size = 64))\n\n# samples_128_1000 <- do(1000) * mean(resample(NHANES_adult$Height, size = 128))\n```\n:::\n\n\n\n\n\nI will receive 1000 values for each sample size\n\nThe plotting of the 1000 values each seperately\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let us overlay their individual histograms to compare them:\np5 <- gf_dhistogram(~mean,\n  data = samples_08_1000,\n  color = \"grey\",\n  fill = \"dodgerblue\", title = \"N = 8\"\n) %>%\n  gf_fitdistr(linewidth = 1) %>%\n  gf_vline(\n    xintercept = pop_mean, inherit = FALSE,\n    color = \"blue\"\n  ) %>%\n  gf_label(-0.025 ~ pop_mean,\n    label = \"Population Mean\",\n    color = \"blue\"\n  ) %>%\n  gf_theme(scale_y_continuous(expand = expansion(mult = c(0.08, 0.02))))\n##\np6 <- gf_dhistogram(~mean,\n  data = samples_16_1000,\n  color = \"grey\",\n  fill = \"sienna\", title = \"N = 16\"\n) %>%\n  gf_fitdistr(linewidth = 1) %>%\n  gf_vline(\n    xintercept = pop_mean,\n    color = \"blue\"\n  ) %>%\n  gf_label(-.025 ~ pop_mean,\n    label = \"Population Mean\",\n    color = \"blue\"\n  ) %>%\n  gf_theme(scale_y_continuous(expand = expansion(mult = c(0.08, 0.02))))\n##\np7 <- gf_dhistogram(~mean,\n  data = samples_32_1000,\n  na.rm = TRUE,\n  color = \"grey\",\n  fill = \"palegreen\", title = \"N = 32\"\n) %>%\n  gf_fitdistr(linewidth = 1) %>%\n  gf_vline(\n    xintercept = pop_mean,\n    color = \"blue\"\n  ) %>%\n  gf_label(-.025 ~ pop_mean,\n    label = \"Population Mean\", color = \"blue\"\n  ) %>%\n  gf_theme(scale_y_continuous(expand = expansion(mult = c(0.08, 0.02))))\n\np8 <- gf_dhistogram(~mean,\n  data = samples_64_1000,\n  na.rm = TRUE,\n  color = \"grey\",\n  fill = \"violetred\", title = \"N = 64\"\n) %>%\n  gf_fitdistr(linewidth = 1) %>%\n  gf_vline(\n    xintercept = pop_mean,\n    color = \"blue\"\n  ) %>%\n  gf_label(-.025 ~ pop_mean,\n    label = \"Population Mean\", color = \"blue\"\n  ) %>%\n  gf_theme(scale_y_continuous(expand = expansion(mult = c(0.08, 0.02))))\n\n# patchwork::wrap_plots(p5,p6,p7,p8)\np5\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 1000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\np6\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 1000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\np7\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 1000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n\n```{.r .cell-code}\np8\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position = \"identity\", : All aesthetics have length 1, but the data has 1000 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-4.png){width=672}\n:::\n:::\n\n\n\n\n\nThe range in the x axis, reduces as the sample size reduces.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}