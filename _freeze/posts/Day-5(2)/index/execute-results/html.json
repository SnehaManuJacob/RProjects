{
  "hash": "b7875a67f1923adead5121ab586e4d81",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 5 - Part 2\"\nauthor: \"Sneha Manu Jacob\"\ndate: \"2024-10-10\"\ncategories: [change, scatter-plot, correlation]\n---\n\n\n\n\nFor count, both variable are quantitative\n\n### Correlation\n\nUsing Scatter plot, we aim to find the correlation between 2 quantitative values. Correlation is commonly used in data analysis to determine whether, and how strongly, variables are related. We assume that the association is linear, that one variable increases or decreases a fixed amount for a unit increase or decrease in the other. The other technique that is often used in these circumstances is regression, which involves estimating the best straight line to summarise the association.\n\nStrong Correlation: Values close to 1 or -1 (e.g., 0.8 or -0.8) show a strong relationship. Weak Correlation: Values close to 0 (e.g., 0.1 or -0.1) show a weak relationship.\n\n**Pearson Correlation**: Measures the linear relationship between two continuous variables. It’s the most commonly used type.\n\n**Line of best fit**- is a straight line that best represents the relationship between two variables in a scatter plot. The line of best fit helps summarize the relationship between two variables by providing a clear visual and mathematical description of how one variable (the independent variable) influences the other (the dependent variable).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Tidy data processing and plotting\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula) # Formula based plots\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n\tlearnr::run_tutorial(\"introduction\", package = \"ggformula\")\n\tlearnr::run_tutorial(\"refining\", package = \"ggformula\")\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Our go-to package\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr) # Another Data inspection package\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(kableExtra) # Making good tables with data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(GGally) # Corr plots\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(corrplot) # More corrplots\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncorrplot 0.94 loaded\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggExtra) # Making Combination Plots\n\n# devtools::install_github(\"rpruim/Lock5withR\")\nlibrary(Lock5withR) # Datasets\nlibrary(palmerpenguins) # A famous dataset\n\nlibrary(easystats) # Easy Statistical Analysis and Charts\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n# Attaching packages: easystats 0.7.3\n✔ bayestestR  0.14.0   ✔ correlation 0.8.5 \n✔ datawizard  0.13.0   ✔ effectsize  0.8.9 \n✔ insight     0.20.5   ✔ modelbased  0.8.8 \n✔ performance 0.12.3   ✔ parameters  0.22.2\n✔ report      0.5.9    ✔ see         0.9.0 \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(correlation) # Different Types of Correlations\n# From the easystats collection of packages\n```\n:::\n\n\n\n\n## Hollywood movies data-set\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHollywoodMovies2011 -> movies\nglimpse(movies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 136\nColumns: 14\n$ Movie             <fct> \"Insidious\", \"Paranormal Activity 3\", \"Bad Teacher\",…\n$ LeadStudio        <fct> Sony, Independent, Independent, Warner Bros, Relativ…\n$ RottenTomatoes    <int> 67, 68, 44, 96, 90, 93, 75, 35, 63, 69, 69, 49, 26, …\n$ AudienceScore     <int> 65, 58, 38, 92, 77, 84, 91, 58, 74, 73, 72, 57, 68, …\n$ Story             <fct> Monster Force, Monster Force, Comedy, Rivalry, Rival…\n$ Genre             <fct> Horror, Horror, Comedy, Fantasy, Comedy, Romance, Dr…\n$ TheatersOpenWeek  <int> 2408, 3321, 3049, 4375, 2918, 944, 2534, 3615, NA, 2…\n$ BOAverageOpenWeek <int> 5511, 15829, 10365, 38672, 8995, 6177, 10278, 23775,…\n$ DomesticGross     <dbl> 54.01, 103.66, 100.29, 381.01, 169.11, 56.18, 169.22…\n$ ForeignGross      <dbl> 43.00, 98.24, 115.90, 947.10, 119.28, 83.00, 30.10, …\n$ WorldGross        <dbl> 97.009, 201.897, 216.196, 1328.111, 288.382, 139.177…\n$ Budget            <dbl> 1.5, 5.0, 20.0, 125.0, 32.5, 17.0, 25.0, 80.0, 0.2, …\n$ Profitability     <dbl> 64.672667, 40.379400, 10.809800, 10.624888, 8.873292…\n$ OpeningWeekend    <dbl> 13.27, 52.57, 31.60, 169.19, 26.25, 5.83, 26.04, 85.…\n```\n\n\n:::\n:::\n\n\n\n\n-   **Movie (Factor)**:\n\n    -   This is likely the title or identifier of the movie. Since it’s a factor, it means there are multiple unique movie titles.\n\n-   **LeadStudio (Factor)**:\n\n    -   The production studio that produced or distributed the movie. It could include studios like Warner Bros, Disney, Universal, etc.\n\n-   **RottenTomatoes (Numeric)**:\n\n    -   The movie’s rating or score on Rotten Tomatoes, a popular review aggregator. It's often expressed as a percentage, representing the proportion of positive reviews by critics.\n\n-   **AudienceScore (Numeric)**:\n\n    -   A score reflecting how audiences rated the movie, also typically on a percentage scale. This is often gathered from surveys or audience feedback platforms.\n\n-   **Story (Factor)**:\n\n    -   This could refer to the primary theme or storyline category of the movie (e.g., Hero’s Journey, Revenge, Coming of Age). It might represent narrative tropes or common plot structures.\n\n-   **Genre (Factor)**:\n\n    -   The type of movie based on its theme or tone (e.g., Action, Comedy, Drama, Horror). These are pre-defined categories common to film classification.\n\n-   **TheatersOpenWeek (Numeric)**:\n\n    -   The number of theaters where the movie was shown during its opening week. A larger number indicates a wide release, while a smaller number could suggest a limited release.\n\n-   **BOAverageOpenWeek (Numeric)**:\n\n    -   Box Office Average for the opening week, likely representing the average box office earnings per theater during that week.\n\n-   **DomesticGross (Numeric)**:\n\n    -   The total amount of money the movie earned in the domestic market (e.g., within the U.S.) during its entire run, expressed in millions of USD.\n\n-   **ForeignGross (Numeric)**:\n\n    -   The total box office earnings from international markets outside the domestic territory, in millions of USD.\n\n-   **WorldGross (Numeric)**:\n\n    -   The combined total of **DomesticGross** and **ForeignGross**, representing global earnings for the movie.\n\n-   **Budget (Numeric)**:\n\n    -   The total cost of producing the movie, including marketing and production expenses, in millions of USD.\n\n-   **Profitability (Numeric)**:\n\n    -   represent how many times the movie's global earnings (WorldGross) exceeded the production budget (Budget).\n\n-   **OpeningWeekend (Numeric)**:\n\n    -   The amount of money the movie made during its opening weekend, in millions of USD. This figure is often used to predict the overall success of a film.\n\nObtaining only the numberic values:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies_quant <- movies %>%\n  drop_na() %>%\n  select(where(is.numeric))\nmovies_quant\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    RottenTomatoes AudienceScore TheatersOpenWeek BOAverageOpenWeek\n1               67            65             2408              5511\n2               68            58             3321             15829\n3               44            38             3049             10365\n4               96            92             4375             38672\n5               90            77             2918              8995\n6               93            84              944              6177\n7               75            91             2534             10278\n8               35            58             3615             23775\n9               69            73             2756              6860\n10              69            72             3040              9310\n11              49            57             3018              6512\n12              26            68             4061             34012\n13              35            67             4088             23937\n14              56            52             2994              8469\n15              71            73             3826             10252\n16              82            78             3379             10492\n17              83            87             3648             15024\n18              23            31             3328              2615\n19              23            50             3395             10489\n20              93            93             2458              3517\n21              93            79             2886              3929\n22              82            80             3925             12142\n23              55            57             3043              7183\n24              85            76             2199              4761\n25              71            68             2926              6364\n26              34            61             4155             21697\n27              61            56             3155              5715\n28              92            81             2961              5002\n29              93            86             3448              8672\n30              37            54             1719              2955\n31              30            39             2787              3390\n32              60            79             3703             10704\n33              38            55             1552              2470\n34              47            63             3167              7500\n35              47            54             3339              5524\n36              38            55             3122              3860\n37              60            72             2817              5979\n38              35            50             3417             10411\n39              77            80             3955             16618\n40              26            50             3579             10490\n41              78            81             3020              6326\n42              38            56             4115             16072\n43              22            40             3295              3534\n44              19            63             3548              8601\n45              78            75             3715             17512\n46              20            43             2985              4955\n47              71            71             3549              4383\n48              72            67             2840              7450\n49               4            29             2534              5921\n50              46            79             2214              4789\n51              58            81             3440              7942\n52              72            70             2802              4655\n53              36            59             3112             10349\n54              58            57             3305              5656\n55              32            57             3154              6167\n56              84            81             3507              5461\n57               4            46             3118              3504\n58              35            44             2950              4588\n59              10            32             2816              3769\n60              76            70             1826              5427\n61              84            63             3222              6935\n62              87            88             3641             15134\n63              83            76             3952              8623\n64              14            42             3482              5763\n65              71            67             2535              4880\n66              11            41             3030              4622\n67              95            89             2993              6516\n68              38            50             2473              3014\n69              44            47             3584              9335\n70              84            82             2707              4879\n71              88            69             3917              9722\n72              24            48             3017              2875\n73              34            46             2973              4405\n74              84            61                4             93230\n75              19            50             1952              5047\n76              68            61             3367              7135\n77              97            87             3440              8500\n78              16            25             2806              2995\n79              28            55             2614              3982\n80              24            50             3002              1806\n81              43            48             2888              4616\n82              24            53             2913              4645\n83              17            37             2864              5221\n84              53            52             2703              4226\n85              59            37             2760              3089\n86              75            68             3114              2477\n87              26            49             3276              3731\n88              91            79             2405              3267\n89              27            48             3816             13935\n90              23            48             3033              6284\n91              39            43             2296              3782\n92              44            50             3750              9715\n93               4            59             3438              7273\n94              23            31             2940              6060\n95              83            93             1869              2805\n96              83            84              247              7174\n97              41            59             3606              5889\n98               7            38             2661              3055\n99              25            48             2986              3132\n100             36            52             2996              2835\n101             45            38             2290              2265\n102             92            82             3376              3537\n103             56            65              707              4960\n104             22            34             3015              3324\n105             26            36             2769              3380\n106             50            48             2273              2259\n107             46            66              265              3856\n108             66            55              106              6111\n109             62            57               22              4890\n110             36            43             3117              2218\n111             38            62             2150              1513\n    DomesticGross ForeignGross WorldGross Budget Profitability OpeningWeekend\n1           54.01        43.00     97.009    1.5    64.6726667          13.27\n2          103.66        98.24    201.897    5.0    40.3794000          52.57\n3          100.29       115.90    216.196   20.0    10.8098000          31.60\n4          381.01       947.10   1328.111  125.0    10.6248880         169.19\n5          169.11       119.28    288.382   32.5     8.8732923          26.25\n6           56.18        83.00    139.177   17.0     8.1868824           5.83\n7          169.22        30.10    199.324   25.0     7.9729600          26.04\n8          254.46       327.00    581.464   80.0     7.2683000          85.95\n9           79.25        82.60    161.849   27.0     5.9944074          18.91\n10         117.54        92.10    209.638   35.0     5.9896571          28.30\n11          70.60        77.10    147.700   25.0     5.9080000          19.70\n12         260.80       374.00    634.800  110.0     5.7709091         138.12\n13         352.39       770.81   1123.195  195.0     5.7599744          97.85\n14          99.97        94.00    193.967   36.0     5.3879722          25.36\n15         143.62       341.02    484.634   90.0     5.3848222          39.23\n16         127.00       132.71    259.713   50.0     5.1942600          35.45\n17         176.70       304.52    481.226   93.0     5.1744731          54.81\n18          17.69         7.88     25.562    5.0     5.1124000           8.70\n19         142.61       419.54    562.158  110.0     5.1105273          35.61\n20          34.90         1.62     36.511    8.0     4.5638750           8.64\n21          34.68        32.33     67.007   15.0     4.4671333          11.34\n22         165.25       497.78    663.024  150.0     4.4201600          47.66\n23          63.69        67.10    130.786   30.0     4.3595333          21.86\n24          40.49        13.70     54.194   12.5     4.3355200          10.47\n25          55.80        93.74    149.541   35.0     4.2726000          18.62\n26         241.07       802.80   1043.871  250.0     4.1754840          90.15\n27          42.59       115.30    157.887   40.0     3.9471750          18.03\n28          54.71        68.57    123.278   32.0     3.8524375          14.81\n29         197.80       336.70    534.500  145.0     3.6862069          29.55\n30          13.84        41.40     55.241   15.0     3.6827333           5.08\n31          23.20        85.40    108.600   30.0     3.6200000           9.40\n32         179.04       261.00    440.040  125.0     3.5203200          39.63\n33           8.31       149.63    157.939   45.0     3.5097556           3.83\n34          52.70        19.72     72.416   21.0     3.4483810          23.75\n35          68.22       119.14    187.355   55.0     3.4064545          18.45\n36          36.49        90.90    127.393   40.0     3.1848250          12.05\n37          58.71        58.39    117.094   38.0     3.0814211          16.84\n38          83.55       128.27    211.818   70.0     3.0259714          35.57\n39         181.03       267.48    448.512  150.0     2.9900800          65.72\n40         108.09        75.87    183.953   63.0     2.9198889          37.54\n41          84.34        58.50    142.841   50.0     2.8568200          19.10\n42         191.45       360.40    551.850  200.0     2.7592500          66.14\n43          38.54        35.54     74.080   27.0     2.7437037          11.64\n44         103.03       111.92    214.945   80.0     2.6868125          30.51\n45         176.65       191.75    368.404  140.0     2.6314571          65.06\n46          33.00        63.00     96.000   37.0     2.5945946          14.80\n47          51.16        10.90     62.053   24.0     2.5855417          15.56\n48          62.50        65.37    127.868   50.2     2.5471713          21.16\n49          37.30         3.19     40.492   16.0     2.5307500          15.00\n50          43.85         0.41     44.267   18.0     2.4592778          10.60\n51          83.61       186.20    269.811  110.0     2.4528273          27.32\n52          37.41        60.57     97.983   40.0     2.4495750          13.04\n53          80.49       102.00    182.485   75.0     2.4331333          32.21\n54          38.18        58.96     97.137   40.0     2.4284250          18.69\n55          55.10        89.40    144.500   60.0     2.4083333          19.45\n56          71.08        16.86     87.947   37.0     2.3769459          19.15\n57          28.07        54.00     82.069   35.0     2.3448286          10.93\n58          45.06        38.10     83.160   36.0     2.3100000          13.54\n59          24.80        66.80     91.600   40.0     2.2900000          10.60\n60          31.18        14.25     45.429   20.0     2.2714500           9.91\n61          75.64        59.80    135.443   60.0     2.2573833          22.40\n62         146.41       207.22    353.623  160.0     2.2101437          55.10\n63         142.09       142.30    284.386  130.0     2.1875846          34.08\n64          80.36        89.94    170.301   80.0     2.1287625          20.07\n65          40.26        23.52     63.781   30.0     2.1260333          12.37\n66          37.66        51.50     89.162   42.0     2.1229048          14.01\n67          74.21        27.90    102.109   50.0     2.0421800          19.50\n68          23.18        16.48     39.664   20.0     1.9832000           7.45\n69          98.80       129.00    227.800  120.0     1.8983333          33.50\n70          58.01        17.00     75.009   40.0     1.8752250          13.21\n71         123.26       121.90    245.154  135.0     1.8159556          38.08\n72          20.25       111.90    132.147   75.0     1.7619600           8.67\n73          35.61        16.80     52.408   30.0     1.7469333          13.10\n74          13.30        41.00     54.303   32.0     1.6969687           0.37\n75          27.87         0.97     28.833   17.0     1.6960588           9.85\n76          74.50        47.00    121.504   75.0     1.6200533          24.03\n77          66.63         5.80     72.426   45.0     1.6094667          29.24\n78          18.88        19.83     38.702   25.0     1.5480800           8.40\n79          36.67        24.30     60.965   40.0     1.5241250          10.41\n80          14.01        16.42     30.426   20.0     1.5213000           5.42\n81          37.05         3.49     40.546   28.0     1.4480714          13.33\n82          37.08        33.75     70.833   52.0     1.3621731          13.53\n83          29.14        49.17     78.308   60.0     1.3051333          14.95\n84          29.20        22.00     51.200   40.0     1.2800000          11.40\n85          24.05         7.50     31.546   25.0     1.2618400           8.53\n86          18.30        18.80     37.102   30.0     1.2367333           7.71\n87          33.04        12.70     45.735   40.0     1.1433750          12.22\n88          26.69         6.46     33.152   30.0     1.1050667           7.86\n89         116.60       103.25    219.851  200.0     1.0992550          53.17\n90          36.39        53.40     89.792   82.0     1.0950244          19.06\n91          19.49         7.63     27.121   25.0     1.0848400           8.68\n92         100.24        74.58    174.821  163.0     1.0725215          36.43\n93          68.91        15.00     83.911   79.0     1.0621646          25.00\n94          48.50        21.20     69.700   70.0     0.9957143          17.80\n95          13.66         9.40     23.057   25.0     0.9222800           5.24\n96           5.31         2.95      8.258   10.0     0.8258000           1.75\n97          57.31        49.20    106.507  135.0     0.7889407          21.24\n98          21.30        17.20     38.502   50.0     0.7700400           8.13\n99          25.12        27.84     52.961   70.0     0.7565857           9.35\n100         16.93        10.50     27.428   38.0     0.7217895           8.49\n101         10.72        18.21     28.931   45.0     0.6429111           5.19\n102         33.70        57.50     91.203  150.0     0.6080200          12.07\n103         11.54         2.67     14.211   25.0     0.5684400           3.51\n104         21.30        27.50     48.795   90.0     0.5421667          10.02\n105         21.60         3.26     24.856   49.9     0.4981162           9.36\n106         13.07         8.48     21.552   45.0     0.4789333           5.14\n107          4.46         9.73     14.190   30.0     0.4730000           1.02\n108          4.40         0.40      4.800   15.0     0.3200000           0.64\n109          0.97         5.40      6.370   21.0     0.3033333           0.11\n110         21.39        17.60     38.992  150.0     0.2599467           6.91\n111          7.17         0.24      7.410   41.0     0.1807317           3.25\n```\n\n\n:::\n:::\n\n\n\n\n### Correlation between domestic gross and world gross.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>%\n  gf_point(DomesticGross ~ WorldGross) %>%\n  gf_lm() %>%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Movie Gross Earnings: Domestics vs World\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_lm()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using the `size` aesthetic with geom_line was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\nThere appears to be a +ve correlation between Domestic gross and world gross.\n\n### Correlation between Profitability and Opening Week.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>%\n  gf_point(Profitability ~ OpeningWeekend) %>%\n  gf_lm() %>%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Movies: Does Opening Week Earnings indicate Profitability?\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 5 rows containing non-finite outside the scale range\n(`stat_lm()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n`OpeningWeek` and `Profitability` are also related in a linear way. There are just **two** movies which have been extremely profitable\n\n### Correlation between RottenTomatoes and AudienceScore.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>%\n  gf_point(RottenTomatoes ~ AudienceScore) %>%\n  gf_lm() %>%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Movie Ratings: Tomatoes vs Audience\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_lm()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\nRotten tomatoes and Audience score have a +ve correlation.\n\n> We can split some of the scatter plots using one or other of the Qual variables.\n\n### Correlation between RottenTomatoes and AudienceScore seprated by Genre.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>%\n  drop_na() %>%\n  gf_point(RottenTomatoes ~ AudienceScore,\n    color = ~Genre\n  ) %>%\n  gf_lm() %>%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Movie Ratings: Trends by Genre\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n### **Quantifying Correlation**\n\nGGally::ggpairs() : This function creates a matrix of plots for pairwise comparisons of the selected variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGGally::ggpairs(\n  movies %>% drop_na(),\n  # Select Quant variables only for now\n  columns = c(\n    \"RottenTomatoes\", \"AudienceScore\", \"DomesticGross\", \"ForeignGross\"\n  ),\n  switch = \"both\",\n  # axis labels in more traditional locations(left and bottom)\n\n  progress = FALSE,\n  # no compute progress messages needed\n\n  # Choose the diagonal graphs (always single variable! Think!)\n  diag = list(continuous = \"barDiag\"),\n  # choosing histogram,not density\n\n  # Choose lower triangle graphs, two-variable graphs\n  lower = list(continuous = wrap(\"smooth\", alpha = 0.3, se = FALSE)),\n  title = \"Movies Data Correlations Plot #1\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n`AudienceScore` and `RottenTomatoes` are well correlated with a score of 8.3. Domestic Gross and Foreign Gross is also well correlated with a score of 8.73. Nothing else is as strongly related.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGGally::ggpairs(\n  movies %>% drop_na(),\n  # Select Quant variables only for now\n  columns = c(\n    \"Budget\", \"Profitability\", \"DomesticGross\", \"ForeignGross\"\n  ),\n  switch = \"both\",\n  # axis labels in more traditional locations(left and bottom)\n\n  progress = FALSE,\n  # no compute progress messages needed\n\n  # Choose the diagonal graphs (always single variable! Think!)\n  diag = list(continuous = \"barDiag\"),\n  # choosing histogram,not density\n\n  # Choose lower triangle graphs, two-variable graphs\n  lower = list(continuous = wrap(\"smooth\", alpha = 0.3, se = FALSE)),\n  title = \"Movies Data Correlations Plot #2\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\nAlthough not too much, you do see a correlation score of 0.65 between budget and Domestic gross and 0.67 between budget and Foreign Gross.\n\nBudget and Profitability seem to have a slight negative correlation.\n\n### **Doing a Correlation Test**\n\nWe try and find out how certain we can be about the correlation score by doing this.\n\n#### What does this data tell me?\n\n**estimate**: This is the **correlation coefficient** (often denoted as \"r\") between **Profitability** and **Budget** in your dataset.\n\n**confidence level low** and **confidence level high**: These are the **lower** and **upper bounds** of uncertainity for the correlation coefficient.\n\n**p.value**: The **p-value** shows the probability that the observed correlation happened by chance, assuming that there is no true correlation.\n\nMovie Profitability vs Budget\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::cor_test(Profitability ~ Budget, data = movies) %>%\n  broom::tidy() %>%\n  knitr::kable(\n    digits = 2,\n    caption = \"Movie Profitability vs Budget\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Movie Profitability vs Budget\n\n| estimate| statistic| p.value| parameter| conf.low| conf.high|method                               |alternative |\n|--------:|---------:|-------:|---------:|--------:|---------:|:------------------------------------|:-----------|\n|    -0.08|     -0.96|    0.34|       132|    -0.25|      0.09|Pearson's product-moment correlation |two.sided   |\n\n\n:::\n:::\n\n\n\n\nHere, the correlation coefficient is -0.08 - a slight negative correlation, but we observe that the uncertainty levels lie within a large range. We also see that that p-value is high. In other words, there is **no clear linear relationship** between **Profitability** and **Budget** in your data. We, I don’t have enough evidence to make strong conclusions about a consistent negative (or positive) relationship. Increasing or decreasing a movie's budget does not reliably predict its profitability.\n\nMovie's Domestic Gross vs Budget\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::cor_test(DomesticGross ~ Budget, data = movies) %>%\n  broom::tidy() %>%\n  knitr::kable(\n    digits = 2,\n    caption = \"Movie Domestic Gross vs Budget\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Movie Domestic Gross vs Budget\n\n| estimate| statistic| p.value| parameter| conf.low| conf.high|method                               |alternative |\n|--------:|---------:|-------:|---------:|--------:|---------:|:------------------------------------|:-----------|\n|      0.7|     11.06|       0|       131|      0.6|      0.77|Pearson's product-moment correlation |two.sided   |\n\n\n:::\n:::\n\n\n\n\nHere, the correlation coefficient is 0.7 - a positive correlation, and we observe that the uncertainty levels lie within a short range i.e. there’s low uncertainty around the estimate. We also see that that p-value is 0, concluding that this inference could not have been by chance making it statistically significant. Therefore, Budget has a strong positive effect on Profitability. Movies with higher budgets tend to have significantly higher Domestic Gross numbers, based on this data. This relationship is statistically significant, reliable, and consistent.\n\nMovie Foreign Gross vs Budget\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::cor_test(ForeignGross ~ Budget, data = movies) %>%\n  broom::tidy() %>%\n  knitr::kable(\n    digits = 2,\n    caption = \"Movie Foreign Gross vs Budget\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Movie Foreign Gross vs Budget\n\n| estimate| statistic| p.value| parameter| conf.low| conf.high|method                               |alternative |\n|--------:|---------:|-------:|---------:|--------:|---------:|:------------------------------------|:-----------|\n|     0.69|     10.22|       0|       118|     0.58|      0.77|Pearson's product-moment correlation |two.sided   |\n\n\n:::\n:::\n\n\n\n\nHas similar inferences as the previous test.\n\n### **The ErrorBar Plot for Correlations**\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}